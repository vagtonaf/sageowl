#labels Featured
Lista de Abreviações e Siglas 

BLENDER - Programa de computador de código aberto,desenvolvido pela Blender Foundation, para modelagem, animação, texturização, composição, renderização, edição de vídeo e criação de aplicações interativas em 3D. 

BSD - (Berkeley Software Distribution) é um Sistema Operacional UNIX desenvolvido pela Universidade de Berkeley, não é um único Sistema Operacional mas sim uma larga família derivada do original. 

BSD LICENSE - É uma licença de código aberto inicialmente utilizada nos sistemas operacionais do tipo Berkeley Software Distribution (um sistema derivado do Unix). Apesar dela ter sido criada para os sistemas BSD, atualmente vários outros sistemas são distribuídos sob esta licença. 

CAA - Computer-Assisted Assessment Centro que oferece uma referência nacional de aconselhamento e apoio para aqueles que pretendam utilizar os computadores para a avaliação no ensino e educação http://www.glow.ac.uk - Desenvolvimento de um código de práticas para a entrega de exames informatizado http://www.cetis.ac.uk - Questão de Teste de Interoperabilidade do grupo de trabalho. 

CAAA - Computer-Assisted Assisted Assessment. 

CAFADE - Computer-Assisted Formative Assessment in Distance Education. 

CAL - Computer-Aided Learning. 

CAT - Computer Adaptive Test(s). 

CBA - Computer-Based Assessment CMC - Computer-Mediated Communication. 

CRUD - Create, Read, Update and Delete 

DAO - Data Access Object 

DI - Dependency Injection 

DJANGO - Framework para desenvolvimento rápido para web, escrito em Python, que utiliza o padrão MVC (Model-View-Controller). 

DLL - Dynamic-link library ou Biblioteca de ligação dinâmica, é a implementação feita pela Microsoft para o conceito de bibliotecas compartilhadas inicialmente nos sistemas operacionais Microsoft Windows e OS/2. 

ECLIPSE - É uma plataforma (IDE) focado no desenvolvimento de ferramentas e aplicações de software. Hoje o Eclipse é a IDE que tem plug-in's para Java, Python, etc, mais utilizada no mundo. 

FTP - File Transfer Protocol ou Protocolo de Transferência de Arquivos, é uma forma bastante rápida e versátil de transferir arquivos é também conhecidos como ficheiros, sendo uma das mais usadas formas de transferência de arquivos na Internet. 

GOOGLE - Empresa desenvolvedora de serviços online, sediada nos Estados Unidos. 

HTTP - HyperText? Markup Language, protocolo de comunicação na camada de aplicação segundo o Modelo OSI é utilizado para sistemas de informação de hipermedia distribuídos e colaborativos. 

IMAP - Internet Message Access Protocol, é um protocolo de gerenciamento de correio eletrônico superior em recursos ao POP3. POP3 - Protocolo (POP) que a maioria dos provedores oferece aos seus assinantes. 

INKSCAPE - Software livre para editoração eletrônica de imagens e documentos vetoriais. 

IT - Information Technology. 

MCQs - Multiple-Choice Questions. 

MRQ - Multiple-Response Questions. 

MVC - Model, View and Controller. 

MYSQL - Sistema de Gerenciamento de Banco de Dados (SGBD), criado na Suécia por dois suecos e um finlandês: David Axmark, Allan Larsson e Michael "Monty" Widenius, a Oracle é atualmente a detentora dos direitos do MYSQL, está que comprou a Sun Microsystems, antiga dona o produto. 

NASA - National Aeronautics and Space Administration; Administração Nacional do Espaço e da Aeronáutica, também conhecida como Agência Espacial Americana. 

PYDEV - Plug-in para o Eclipse, é uma das melhores IDEs para desenvolvimento em Python. 

PYTHON - Python é uma linguagem de programação de alto nível, interpretada, imperativa, orientada a objetos, de tipagem dinâmica e forte. Python teve a sua origem no grupo humorístico britânico "Monty Python", criador do programa "Monty Python's Flying Circus". SCRUM - Método ágil para Gerenciamento de Projetos. A designação SCRUM vem do Rugby e significa o reinício do jogo em certos casos. SQL - Linguagem de Consulta Estruturada, do inglês Structured Query Language. 

QT - Sistema multiplataforma para o desenvolvimento de programas de interface gráfica. GTK+ - É um toolkit multi-plataforma para a criação de interfaces gráficas. Ele foi desenvolvido para o GIMP. 

QTI - Question and Test Interoperability. 

SMTP - Simple Mail Transfer Protocol,é o protocolo padrão para envio de e-mails através da Internet. GIMP - GNU Image Manipulation Program, é um programa de código aberto voltado principalmente para criação e edição de imagens raster, e em menor escala também para desenho vetorial. 

SPRINT - Está ligado a metodologia SCRUM, é uma interpretação do backlog do produto e contém tarefas concretas que serão realizadas durante o próximo sprint para implementar alguns dos itens principais no backlog do produto. 

SQL - Structured Query Language. 

UNIX - Sistema operativo ou sistema operacional portátil ou portável, multitarefa e multiutilizador ou multiusuário, originalmente criado por Ken Thompson, que trabalhava nos Laboratórios Bell Labs da AT&T. DELPHI - É um IDE, ambiente integrado para desenvolvimento de software, produzida antigamente pela Borland Software Corporation atualmente produzida pela empresa Embarcadero. 

UML - Unified Modeling Language. 

VLE - Virtual Learning Evironments. 

W3C - World Wide Web Consortium é um consórcio de empresas de tecnologia, atualmente com cerca de 500 membros. 

WIGETS - componente de uma interface gráfica do utilizador (GUI), o que inclui janelas, botões, menus, ícones, barras de rolagem, etc. MVC - Model-View-Controller, termo é frequentemente ouvido em declarações como " framework foo supports MVC". 

WIKI - Software colaborativo que permite a edição coletiva dos documentos usando um sistema que não necessita que o conteúdo tenha que ser revisto antes da sua publicação. BACKLOG - Para a Metrodologia SCRUM, Backlog de produto e backlog de sprint é uma lista de itens priorizados a serem desenvolvidos para um software. 

WIKIPÉDIA - Enciclopédia multilíngue online livre na web, colaborativa, ou seja, escrita internacionalmente por várias pessoas comuns de diversas regiões do mundo, todas elas voluntárias. 

XML - eXtensible Markup Language 

XML-RPC - Protocolo de RPC codificado em XML. É um protocolo simples, definido com poucas linhas de códigos em oposição com a maioria dos sistemas de RPC. RPC - Chamada Remota de Procedimento, acrônimo de Remote Procedure Call. XML - eXtensible Markup Language é uma recomendação da W3C para gerar linguagens de marcação para necessidades especiais. 

YAHOO - Empresa norte-americana de serviços de Internet com a missão de ser "o serviço de Internet global mais essencial para consumidores e negócios". 
 



Índice 


1. Introdução 


1.1. Contexto

      A informática hoje, está transformando o nosso mundo. A Internet, sobre tudo é um meio de comunicação ágil, e presente em mais de 41 milhões de lares (IBOPE//NetRatings), que cada vez mais, crescem e exigem velocidade, informação e praticidade. Esta tem revolucionado a informação, seja na coleta de dados avançados ou em serviços dinâmicos espalhadas por todo o mundo. Na educação encontramos o foco para alavancar inúmeras aplicações Web que tem como objetivo prover serviços destinados a treinamento e avaliação, em qualquer área ou domínio do conhecimento.

      Diante deste cenário, encontra-se uma grande necessidade de virtualização do processo de aprendizagem e com ele o de avaliação. No que diz respeito ao acompanhamento do desempenho, a avaliação assistida por computador tem sido utilizada principalmente para viabilizar testes em diferentes localidades e reduzir os tempos de correção e resposta aos alunos pelos professores. Entende-se como avaliação assistida por computador todo processo de avaliação que faz uso de algum suporte da informática para obter informações ou auxiliar na correção e feedback automático para estudantes e professores.(CHALMERS; MCAUSLAND, 2007). 


1.2 O Papel da Avaliação na Aprendizagem

      Em uma visão contemporânea da aprendizagem, verificamos que as pessoas constroem novos conhecimentos e compreensões baseados no que elas já conhecem (Moreira 1999). Portanto, acreditamos que os docentes precisam estar atentos não só aos conhecimentos dos seus alunos mais às suas lacunas de conhecimento que trazem sobre sua disciplina. Alguns exemplos são: compreensões incompletas, falsas crenças e definições, interpretações estreitas dos conceitos, etc.

      No passado acreditava-se a aprendizagem centravam-se nas capacidades cognitivas e nos fatores motivacionais como os principais determinantes da realização escolar. Hoje, com o avanço das metodologias pedagógicas, uma terceira categoria de variáveis tem sido extensivamente estudada: a dos processos metacognitivos [Ribeiro 2003].

      Esta avaliação e realimentação são fatores importantes para ajudar as pessoas a aprender e deveriam acontecer continuamente como parte do processo de ensino-aprendizagem. Muitas práticas atuais, nos diversos ambientes de aprendizagem, falham ao não propiciarem uma avaliação que sirva de apoio para a aprendizagem. A grande atenção dada à uma única medida (nota), atua como um fator inibidor e desestimulador desta aprendizagem.

      Existe atualmente uma necessidade de remodelar as formas de avaliar, criando mecanismos capazes de identificar as lacunas que impedem a aprendizagem e assim criar novas oportunidades de aprender [Bransford et al. 2003].

      A avaliação da maneira que vem acontecendo contamina e prejudica toda a relação pedagógica, sendo necessária a superação da lógica classificatória e excludente da avaliação. Apesar do discurso corrente de que a avaliação é um processo contínuo que visa um diagnóstico, as práticas de sala de aula pouco têm mudado: as ”provinhas”  bimestrais, trimestrais ou semestrais continuam únicas e preponderantes [Vasconcellos 1998]. 


1.3. Motivação 


      Acreditamos, que o uso deste tipo de avaliação tem sido aplicado mais para validação ou certificação do desempenho do que para um processo de avaliação formativa e auto-reguladora das aprendizagens. 

      Neste momento, a busca pela aprendizagem, de pessoas que ingressam no mercado de trabalho, de governos, de instituições de educação, de Empresas de treinamento e consultoria, vem enfrentando dificuldades para atender a demanda e exigência, principalmente, no que diz respeito a informação e qualificação profissional. Nos últimos anos, as tecnologias, metodologia e modelos de ensino a distância aparecem como solução para atender esta solução em larga escala no contexto educacional. Dentro deste contexto, temos duas vertentes principais: 

      Governos ,Instituições, Empresas – Buscam uma solução financeiramente viável para atender em larga escala os cursos oferecidos;

      Pensadores, Educadores e Demais Docentes – Entendem e desejam que o atendimento ao aluno deva ser o mais personalizado possível em favor da qualidade do processo de ensino-aprendizagem.

      E possível afirmar, inclusive, que com o crescente aumento das tarefas dos professores e docentes a automatização de alguns processos tornam-se necessários para otimizar os tarefas, garantindo assim uma maior agilidade para obtenção de resultados e proporcionando mais facilidades, rapidez, segurança, e precisão na avaliação dos alunos.

      Estas vertentes e as circunstâncias distintas nos permitem pensar nos benefícios de uma avaliação assistida por computador, que poderá ser supervisionada ou não, permitindo que tanto o aluno quanto os docentes acompanhem o seu desenvolvimento contínuo mediante a coleta de diversos dados computados de maneira direta e indireta. 
 


1.4. Objetivos

      Primeiramente, gostaríamos de esclarecer que em nenhum momento acredita-se ou pretende-se que este recurso ou sistema informatizado substitua as relações entre alunos e docentes. Apenas deseja-se contribuir para a construção de recursos e sistemas informatizados que possam ajudar a fazer emergir a confiança, a persistência e auto-regulação dos estudantes no processo de aprendizagem. Também, neste primeiro momento, não pretendemos abranger todos os domínios do conhecimento. 

      Portanto, a contribuição que se procura trazer com este projeto, em relação aos anteriores, é a investigação do uso de uma ferramenta que possibilitara a avaliação e correção automática com o recurso de avaliação assistida por computador e seus possíveis subsídios para o monitoramento, a intervenção reguladora e a auto-regulação da aprendizagem num contexto de ensino a distância ou presencial.

      Nosso principal objetivo é implementar um sistema on-line para criação, aplicação e correção de provas em ambiente WEB atendendo as necessidades organizacionais de instituições de ensino (presenciais ou a distância), através da evolução dos processos pelos utilizados atualmente. 

      • Tornar dinâmica e precisa a maneira com que são aplicadas e corrigidas as provas e testes, bem como facilitar a visualização de seus resultados.

      • Aplicações de provas simultâneas em diferentes áreas;

      • Suprir as necessidades do Contexto Educacional;

      • Facilitar a manutenção de provas, exercícios e questionários;

      • Personalização de Provas;

      • Personalizar a exibição de questão (texto, imagem e som);

      • Diferentes tipos de questões, adição de interatividade;

      • Correção manual automatizada da prova minimizando a intervenção do professor.

      • Rápida visualização dos resultados com relatórios e histórico de notas por aluno o questão; 

      • Possibilidade de relatórios e resultados diversos; 
 
 


2. Fundamentação Teórica 


2.1. Funções da Avaliação 


      No processo de ensino e da aprendizagem tão importante quanto a escolha dos conteúdos e das técnicas instrucionais a serem utilizadas é conhecer o estado cognitivo do grupo, ou se possível de cada aprendiz.[Moreira and Masini 2001]

      Acreditamos que seja necessário em ambientes de aprendizado e avaliação virtualizados, obter previamente a medida do conhecimento do estudante em determinado conteúdo, permitindo que o sistema faça uso de técnicas para adaptar o conteúdo e modelos de questões, possibilitando que a aprendizagem seja significativa.

      A avaliação pode ser classificada, segundo suas funções em: diagnóstica, formativa e

somativa [Bloom et al. 1983]: 


Avaliação Diagnóstica

      Tem como principal objetivo mensurar o quanto o estudante sabe sobre o que será abordado no decorrer e no final do curso, para determinar quais são os possíveis pontos que deixaram de ser aprendidos. Permite detectar a existência ou não de pré-requisitos. 


Avaliação Formativa

      Tem como característica o fato de fornecer informações ao professor e ao estudante no decorrer do processo, possibilitando orientar a melhoria do desempenho dos estudantes, facilitando ao estudante o entendimento e correção dos próprios erros, evitando o acúmulo de problemas. 


Avaliação Somativa

      Consiste no fornecimento de informações a respeito do valor final do desempenho do educando. O objetivo principal da avaliação somativa é a atribuição de notas, diplomas ou certificados aos estudantes ao final do curso, além de permitir a comparação de conteúdos programáticos. 
 


2.2. Taxonomia dos objetivos educacionais 


      A taxonomia dos objetivos educacionais, comumente conhecida como taxonomia de Bloom, é uma estrutura de organização hierárquica de objetivos educacionais que foi resultado do trabalho de uma comissão multidisciplinar de especialistas de várias universidades dos EUA, liderada por Benjamin S. Bloom, na década de 1950. 

Bloom considerava fundamental definir de forma clara, precisa e verificável o objetivo a ser atingido ao final de uma ação educacional. Desta forma, Bloom dividiu as possibilidades de aprendizagem em três grandes domínios:

- o cognitivo, abrangendo a aprendizagem intelectual;

- o afetivo, abrangendo os aspectos de sensibilização e gradação de valores;

- o psicomotor, abrangendo as habilidades de execução de tarefas que envolvem o organismo muscular.

Cada um destes domínios tem diversos níveis de profundidade de aprendizado. Por isso a classificação de Bloom é denominada taxonomia: cada nível é mais complexo e mais específico que o anterior. O terceiro domínio não foi terminado, e apenas o primeiro foi implementado em sua totalidade.

Dada esta abrangência nos manteremos apenas no domínio já implementado, que é o cognitivo, estando para outra versão os demais domínios que são Afetivo e Psicomotor. 


2.2.1. Domínio Cognitivo:

      O domínio cognitivo envolve o conhecimento e o desenvolvimento de habilidades intelectuais. Isto inclui a retirada ou o reconhecimento das circunstâncias específicas, padrões processuais, e conceitos que servem para o desenvolvimento de capacidades intelectuais e competências. Há seis categorias principais, que são listados em ordem a seguir, partindo do comportamento mais simples aos mais complexos. As categorias podem ser consideradas como graus de dificuldades. 


Conhecimento: Recall de dados ou informações.

Palavras-chave: define, descreve, identifica, sabe, etiquetas, listas de jogos, nomes, linhas, recorda, reconhece, reproduz, seleciona, afirma.

Exemplos: RECITE uma política. Citação preços a partir de memória para um cliente. Conheça as regras de segurança.  


Compreensão: Compreender o significado, a tradução, a interpolação e interpretation of instructions and problems. State a problem in one's own words. 

Palavras-chave: compreende, converte, defende, distingue, estimativas, explica, amplia, generaliza, dá exemplos, infere, interpreta, parafraseia, prediz, regrava, resume, traduz.

Exemplos: reescreve os princípios de teste escrito. Explique em as próprias palavras, os passos para a realização de uma tarefa complexa. Traduz uma equação em um computador planilha.  


Aplicação: Utilize um conceito em uma situação novo espontâneo ou utilização de uma abstração. Aplica o que foi aprendido na sala de aula em novas situações no local de trabalho.

Palavras-chave: aplica-se, mudanças, calcula, constrói, demonstra, descobre, manipula, modifica, funciona, prediz, prepara, produz, diz, mostra, resolve, usa.

Exemplos: Utilizar um manual para calcular um tempo de férias dos trabalhadores. Aplicar leis de estatísticas para avaliar a confiabilidade de um teste escrito.  


Análise: Separa material ou conceitos em componentes de modo que a sua estrutura organizacional pode ser entendida. Distingue entre fatos e inferências.

Palavras-chave: analisa, decompõe, compara, contrasta, diagramas, deconstructs, diferencia, discrimina, distingue, identifica, ilustra, deduz, define, relaciona, seleciona, separa.

Exemplos: Troubleshoot uma peça de equipamento, usando lógica dedução. Reconhecer falácias no raciocínio lógico. Reúne informações a partir de um departamento e seleciona as tarefas exigidas para a formação.  


Síntese: Constrói uma estrutura ou padrão de diversos elementos. Ponha partes para formar um todo, com ênfase na criação de um novo significado ou estrutura.

Palavras-chave: categoriza, reúne, compila, compõe, cria, aparelhos, desenhos, explica, gera, modifica, organiza, planos, reorganiza, reconstrói, refere, reorganiza, revê, regrava, resume, diz, escreve.

Exemplos: Escreva uma companhia de operações ou processo manual. Desenho de uma máquina para realizar uma tarefa específica. Integra formação a partir de várias fontes para resolver um problema. Revê e processo para melhorar o resultado.  


Avaliação: Fazer julgamentos sobre o valor das idéias ou materiais.

Palavras-Chave: avalia, compara, conclui, contrastes, critica, critica, defende, descreve, discrimina, avalia, explica, interpreta, justifica, diz, resume, suporta.

Exemplos: Selecione a solução mais eficaz. Contratar os candidatos mais qualificados. Explicar e justificar um novo orçamento.  


2.2 A Avaliação Meta-Cognitiva x Avaliação Cognitiva 


      A avaliação meta-cognitiva tem como objetivo criar condições para que aprendiz possa monitorar o próprio conhecimento. Baseado em um modelo hierárquico de metacognição, este trabalho propõe o monitoramento dos conhecimentos prévios, como um processo metacognitivo fundamental.

      A capacidade meta-cognitiva dá aos aprendizes a habilidade para planejar e monitorar seu sucesso e corrigir erros, quando necessários. A reflexão do sujeito sobre o seu próprio conhecimento é muito importante em qualquer situação de aprendizagem.

      A avaliação cognitiva tem como meta principal identificar o nível cognitivo do aprendiz num determinado domínio de conhecimento, de forma que seja possível no curso de diversas avaliações apontar quais são os conceitos que o aprendiz demonstra que ”sabe”, ou seja, compreender melhor o conhecimento atual que um estudante possui.

      O termo ”conhecimento atual” denota que aquilo que uma pessoa sabe está sempre mudando e que portanto é necessário monitorar esses conhecimentos para melhor guiar a instrução, seja no ensino presencial ou em Ambientes (Ribeiro,2003).  


Computacionais de Aprendizagem.

      Entendemos que para uma avaliação nos moldes propostos deverão ser criadas avaliações metacognitivas com o objetivo de avaliar os conhecimentos prévios e fornecer feedback ao aluno para que este possa aprimorar e aprofundar seus conhecimentos. Estas deverão ser demarcadas por avaliações cognitivas que medirão o nível de aprendizagem e trará resultados específicos quanto às técnicas instrucionais e conteúdo aos docentes. 


2.3. Avaliação Eletrônica (E-Assessment) 


      Avaliação Eletrônica ou popularmente conhecida com o termo em inglês "E-Assessment", que é conhecida no ambiente corporativo, cada vez mais, sob o conceito de "Gestão Profissional", que resumidamente significa: avaliar competências, conhecer com maior eficiência e critério as pessoas, autoconhecimento e gestão do conhecimento.  


      Este uso dos recursos de TI para a tomada de decisão sobre mediação e avaliação da aprendizagem e competência foram previamente relatados por: Raabe (2005) e Pimentel, Omar e França (2005). Segue breve transcrição das pesquisas e trabalhos. 

Raabe (2005)

      Com o objetivo de melhorar o acompanhamento aos alunos nas disciplinas presenciais de algoritmo e medir a capacidade de aprendizado, Raabe (2005) desenvolveu um ambiente informatizado com base nos conceitos de sistemas tutores inteligentes (STI) a partir de uma perspectiva fundamentada na teoria das Experiências de Aprendizagem Mediadas (FEUERSTEIN, 2002; BEYER, 1996). Neste ambiente, além de existir um tutor artificial, o professor também atua como participante do processo de acompanhamento e atendimento ao aluno.

      Na arquitetura proposta destaca-se o Modelo de Mediação que é responsável pela tomada de decisão que um determinado aluno deve receber. A decisão sobre a modalidade de mediação depende de informações contidas no modelo do aluno como dificuldades de aprendizagem, índice de reciprocidade e potencial de modificabilidade cognitiva que, por sua vez, baseiam-se nas informações do currículo no modelo do domínio.

      Dentre as doze modalidades de mediação apresentadas na teoria de Feuerstein (2002), este utilizou quatro modalidades. 

      Aquelas consideradas fundamentais para a ocorrência de uma Experiência de Aprendizagem Mediada: mediações de significado, transcendência e intencionalidade-reciprocidade e também a mediação do sentimento de competência, a qual pode ser necessária na mediação de problemas de aprendizagem.

      A arquitetura proposta conta também com assistentes que podem auxiliar na análise, síntese, tomada de decisão e interação com o usuário no ambiente desenvolvido:

      Assistente de Monitoramento: este assistente simula a ação de um monitor ou assistente do professor registrando todas as ações dos alunos no sistema. 

      Assistente de Análise e Síntese: estes assistentes buscam apoiar o professor no seu acompanhamento do processo de aprendizagem a partir da montagem de relatórios com detalhamento do aluno (análise) e com uma visão da turma de alunos (síntese).

      Assistente de Interface: esse assistente foi criado com a intenção de personificar uma monitora virtual – a personagem Alice – e tem como função comunicar todas as tarefas provenientes de ações mediadoras, além de gerar um diálogo conforme o índice de reciprocidade do aluno.

      O trabalho de Raabe (2005), foca nos subsídios para personalização do ensino de algoritmos, os trabalhos do grupo de Pimentel, Omar e França (2005) propõem que “tão importante quanto à personalização do ensino, adaptado às condições de aprendizagem do aluno é a personalização da avaliação” (OMAR et al., 2005, p. 44). A arquitetura proposta por estes pesquisadores tem como base os índices: 


Métricas Metacognitivas

KMA (Knowledge Monitoring Accuracy – Precisão do Monitoramento do Conhecimento) (TOBIAS e EVERTON, 2002)

      O índice KMA foi criado por [Everson and Tobias 2002] para medir e avaliar a diferença entre as estimativas do aprendiz sobre seu conhecimento num domínio e seu conhecimento real determinado por desempenho em avaliações. 


KMB (Knowledge Monitoring Bias – Desvio do Monitoramento do Conhecimento) (GAMA, 2004)

      O índice KMB para medir e identificar o tipo de desvio do aprendiz no monitoramento do seu conhecimento. Com isso é possível saber se o aprendiz é pessimista, prevê que vai errar e acerta, ou otimista, prevê que vai acertar e errar. 


Mértica Cognitiva

NAC (Nível de Aquisição de Conhecimentos) proposto pelos próprios Pimentel, Omar e França (2005).

      É utilizado como métrica cognitiva, e definido como: ”uma medida que indica o grau de conhecimentos do aprendiz em um determinado conteúdo, de um domínio de conhecimento, naquele instante”. 

      O NAC será obtido a partir de diversas atividades de avaliação do conhecimento, e deve espelhar também a possibilidade de que o conteúdo ainda não tenha sido avaliado. Assim, juntamente com a medida de conhecimento, o NAC dever carregar a quantidade de vezes em que o ”conceito”  foi avaliado. 
 
 
 
 
 


3. Metodologias de Desenvolvimento

3.1 Metodologia de desenvolvimento do Projeto - SCRUM

      Scrum é um processo interativo e incremental para o desenvolvimento de produtos ou para a gestão de tarefas.

      Concebida inicialmente como método de gerenciamento de projetos em empresas de fabricação de automóveis e produtos de consumo, por Takeuchi e Nonaka no artigo "The New Product Development Game" (Harvard Business Review, Janeiro-Fevereiro 1986), é classificada como uma metodologia ágil e de fácil gerenciamento e vem sendo adotada recentemente por grandes empresas no seguimento de software, como a Google e Yahoo, que subdividem suas grandes equipes em pequenas equipes distintas e obtendo um resultado satisfatório.

      Esta metodologia tem como objetivo agilizar e melhorar os resultados dos desenvolvimentos de softwares. Esta agilidade suportada por esta metodologia de planejamento e gestão é sem duvida uma evolução na capacidade de resposta, adequabilidade, eficiência e eficácia na gestão de processos. O método SCRUM é usado para maximizar a produtividade das equipes. O núcleo do processo de gerenciamento de projetos ágeis do SCRUM é baseado em um modelo cooperativo onde a equipe se auto gerenciam, são organizadas em níveis e em várias hierarquias profissionais, seguindo um contexto em que todos decidem, por meio de reuniões, a melhor forma de agir para solução de um problema comum ou desafio e assim atingir um único objetivo que é a entrega do sistema ao cliente com custo, tempo e qualidade melhores, com isso gerando maior lucratividade.  


Teoricamente pode ser aplicado em qualquer situação onde um grupo de pessoas necessitem trabalhar juntas para atingir um objetivo comum, como iniciar uma empresa pequena e que necessita de um método de organização, escola pequena, projetos de pesquisa científica, etc.  


Escolhemos o SCRUM por se adequar a nossa necessidade e prazo limitado para a entrega. Nos Organizamos de forma a manter uma em uma lista mestre com todas as atividades a serem realizadas que é conhecida como Product Backlog. Esta lista fica subdividida em Sprint, onde um Sprint Planning Meeting é uma reunião de planejamento das atividades onde a prioridade destas tarefas fica a cargo do Product Owner. Os colaboradores selecionam as atividades que serão capazes de absorver e analisam a solução de desenvolvimento durante o Sprint que é o período definido para a conclusão das tarefas e inicio de uma nova reunião SCRUM. Tarefas que fazem parte de um Sprint são transferidas do Product Backlog para o Sprint Backlog.

3.2. Padrão MVC

      O Model-View-Controller, ou MVC, é um padrão de desenvolvimento utilizado atualmente com o objetivo de separar as "tarefas" de interface e visualização das tarefas de acesso a dados e negócio. Para tal foi criada uma camada denominada controlador (Contoller), que conforme o nome, controla as tarefas de geração de interface (View) e acesso a dados (Model). 

      Originalmente foi criado como padrão de projeto arquitetural desenvolvido para o ambiente Smalltalk, porém hoje este tipo de arquitetura vem sido utilizado para qualquer aplicação interativa, principalmente Web. 

- Modelo(Model) 

Representa o "domínio" específico da informação em que a aplicação em si opera. Em nosso caso o aluno, professor e a turma fazem parte do domínio de nosso sitema de avaliação. Lógica de domínio adiciona sentido a dados crus (por exemplo, calcular se hoje é aniversário do usuário, ou calcular o total de impostos e fretes sobre um determinado carrinho de compras). 

Em nossa aplicações usaremos um Banco de Dados para armazenar os dados. MVC não cita especificamente a camada para acesso aos dados, porque subentende-se que estes métodos estariam encapsulados pelo Model. 

- Visualização(View) 

Representa toda visualização "Renderizada" pela camada de Modelo de maeria a permitir a interação, geralmente uma interface de usuário. 

- Controlador (Controller) 

Processa e responde a eventos, geralmente ações do usuário do sistema, e pode invocar alterações da camada de Modelo. Nesta camada é feita a validação dos dados e também  é onde as entradas dos dados dos usuários são filtradas.  


3.3. PYTHON  


      A linguagem de programação foi por nós escolhida por ser fácil e dinâmica, esta trata de linguagens de scripts, ou seja, não precisa ser compilada para ser executada em ambiente loval ou Web. Python vem sendo utilizado em inúmeros programas de Computação gráfica, como GIMP, Inkscape e Blender, para aumentar os seus recursos e ferramentas que eles possuem. É uma linguagem interpretada e orientada objetos, tudo é referenciado como objeto Oferece tipos de alto nível como tuplas, dicionários, listas, classes, strings, arquivos. O controle de bloco é feito apenas por identação, ou seja, não há delimitadores como o {}, utilizados em linguagens como Java. É atualmente utilizada em projetos de grandes empresas como a Google, NASA, Distros Linux. Implementa Google App Engine.  


  Estremamente escalável o Python pode ser empregada na solução da maioria dos problemas, sendo designada de uso geral. Sua biblioteca padrão contém módulos para processamento de texto e expressões regulares, possui recurso parar protocolos de rede HTTP, FTP, SMTP, XML-RPC, IMAP, POP. Existe uma grande variedade de extensões adicionais para todo tipo de aplicação e também possui acesso a serviços do sistema operacional, criptografia, interface gráfica etc. Em aplicações Web é largamente usado como linguagem de scripting para administração de sistemas e automação. Sua facilidade de integração com C torna o essa linguagem mais atrativa em aplicações de maior porte. Com o uso de ferramentas como o freeze ou Py2Exe (Geradores de arquivos executáveis e/ou componentes .COM e .DLL), que podem ser utilizados sem a presença do interpretador. È possível distribuir aplicações Python stand-alone, sem que o usuário tenha que instalar o interpretador Python separadamente. 

      Praticamente tudo o que se faria com qualquer linguagem de programação, seja ela interpretada ou compilada pode-se se fazer com python desde protótipos de sistemas, automatizar há tarefas repetitivas como manipulação de texto, cópia de arquivos. Pode-se também desenvolver aplicações que funcionam no modo texto, tanto interativos como servidores ou daemons. Podemos desenvolver Webs em modo gráfico usando a interface nativa do sistema, ou utilizando Qt, Tk, GTk, wxWidgets, etc. 

      Sendo assim o Python é uma linguagem de multiuso, pode-se criar websites até aplicativos desktop, existem vários ambientes integrados para a linguagem, o seu constructor é muito semelhante ao do Delphi, no Eclipse é integrável através do Pydev, WingWare, entre outros. Como é portável a quase todos os sistemas operacionais existentes até mesmo em sistemas de grande porte como o Unix, foi desenvolvido para integração com vários bancos de dados através de plug-in's. Possui uma série de funções e classes que reduzem o trabalho do Programador. Podendo fazer a integração com o C++, e desenvolver aplicações Web utilizando frameworks, como o Django. 

Comparação de complexibilidade no script de programação: 

Linguagem Python: 

print "Hello Wolrd"  


Linguagem C: 

#include <stdio.h> 

int main(void) { 

printf("Hello Wolrd"); return 0; 

}  
 


Linguagem C++: 

#include 

<iostream>

using namespace std; 

int main() { 

cout << "Hello Wolrd"; 

}  

############# topicos a ser abordados
Metodologia de implementação     
Metodologia de implantação para um projeto     
Levantamento de Requisitos     
 Requisitos Não-Funcionais    
  RNF001 - Plataforma   
  RNF002 - Ambiente   
  RNF003 - Linguagem de Programação   
 Requisitos Funcionais    
  RF001 - Cadastro de Classe de (taxonomia)   
  RF002 - Cadastro de Atributo   
  RF003 - Cadastro de Grupo de Usuário   
  RF004 - Cadastro de usuários   
  RF005 - Definir Permissões   
  RF006 - Visualizar Histórico   
  RF007 - Pesquisa Simples   
  RF008 - Pesquisa composta   
  RF009 - Incluir instituição   
  RF010 - Visualizar das questões   
  RF011 - Incluir questão   
  RF012 - Check-Out   
  RF013 - Check-In   
  RF014 - Responder Questão   
  RF015 - Excluir questão   
  RF016 - Postar Resultados   
 Regras de Negócio    
  RN01 - Check-Out   
  RN02 - Check-In   
Diagrama de Caso de Uso (UML)     
 Descrições do Caso de Uso    
 Diagrama de Classes    
  Diagrama de Classes Conceitual  #Protótipo inicial Vagton#  
  Diagrama de Classes Implementado   
  Dicionário de Classes   
  Diagramas de Sequência   
Projeto do Banco de Dados     
 Projeto Lógico    
 Modelo de Classes sqbd    
 Esquema textual    
 Projeto Físico    
  Nomenclatura   
  Descrição das Tabelas   
  Script de criação do banco de dados   
Descrição de todos os módulos     
Desenvolvimento     
 Protótipo da Aplicação    
Projeto de Interface Gráfica     
 Taxionomia da Hierarquia de Telas  Jose Roberto   
 Padrões e convenções utilizados nos desenhos das telas  Jose Roberto   
 Layout das telas  Jose Roberto   
Segurança     
Projeto de Implantação     
##################################
 Procedimento de Implantação em servidor e instalação do ambiente de desenvolvimento

 Com um grande potêncial a parceria Eclipse e Python promete um grande sucesso, começando com o Eclipse que tem grande número de plugins disponíveis, para trabalhar com a linguagem Python e utilizando o plugin Pydev, se mostra muito versátil. Como instalar esse plugin de forma bem prática e muito fácil?. Vamos ver logo abaixo: 

Começamos com o Eclipse: É preciso que você esteja com seu Eclipse previamente instalado, eu recomendo utilizar a versão 3.4.0, é a que estou usando para o desenvolvimento, ela é compatível com a última versão do Python, Pydev e Django. 

Para que o Plugin para o Eclipse para a plataforma Python é o Pydev. 

Podemos encontrar as plataformas acima nos links descritos abaixo: http://www.djangoproject.com/ Home page oficial do Python: http://www.python.org.br/wiki 

Primeiramente vamos instalar o python: 
Está Instalação é referecia para a utilização da linguagem python versão 2.6: http://www.python.org/ftp/python/2.6.2/python-2.6.2.msi 

Precisamos instalar o FrameWork? Django no Python para que possa nos auxiliar na construção dos sites mais rapidamente: (Python 2.6.x): http://media.djangobrasil.org/djangobrasil/downloads/Django-1.0_final.win32.py26.exe 

Instalação do plugin do MySql? no Python para que o python possa se conectar ao repositorio de dados que vamos utilizar nesse projeto, existem inumeros plugins para diversos bancos de dados existentes no mercado, como o Sql Server e Oracle http://www.technicalbard.com/files/MySQL-python-1.2.2.win32-py2.6.exe 

Utilizaremos nesse projeto um sistema de controle de versão desenhado especificamente para ser um substituto moderno do CVS, que se considera ter algumas limitações. http://pt.wikipedia.org/wiki/Subversion Instalação do SVN Repositorio http://subclipse.tigris.org/install.html foi usado essa url para a instalação http://subclipse.tigris.org/update_1.6.x instalar no eclipse criar new repository location referenciar a url https://sageowl.googlecode.com/svn/trunk/ para direcionar o SVN para o projeto no Google Code, onde escolhemos para abrigar a aplicação. 

para o seu login no gmail a senha e conseguida via esse link: http://code.google.com/hosting/settings utilizaremos o command do prompt (cmd) do Windows, escolhemos essa plataforma de sistema operacional para o desenvolvimento. O Django (tem que descompactar e executar o setup pelo cmd) MysqlDb?? para conectar o python ao mysql http://www.djangoproject.com/download/1.0.2/tarball/ 

e faz a fast install do pydev no seu eclipse como vemos no link: http://pydev.sourceforge.net/download.html 

O Python já possui um recurso incorporado de um servidor web para testes, não é necessário instalar no momento do desenvolvimento da aplicação um servidor web, como o apache. 

Pronto ai voce ja vai ter tudo que precisa para trabalhar com python (não precisa de mais nada). 

E instala o plugin do pydev no seu eclipse, para não ter que ficar mechendo no notepad. 

http://pydev.sourceforge.net/download.html 

http://sourceforge.net/projects/pydev/files/ 

Poe o Python.exe no path e executa isso para criar um projeto: 

python django-admin.py startproject meusite 

ele vai criar um diretorio com os arquivos basicos do projeto, edita o arquivo settings.py e poe os dados do teu mysql; usuario, senha, etc... Entra no command e da CD no diretorio do projeto (onde tem um arquivo manager.py) e executa esse comando para iniciar o servidor: 

python manage.py runserver 

ai é só acessar pelo IE ou firefox http://127.0.0.1:8000/ 

pronto. 

### ver referências de telas de instalação no link: http://www.plugmasters.com.br/sys/materias/716/1/Python-no-Eclipse-com-o-Pydev #### 

paços da instalação do Python no Eclipse com o Pydev: 1) No Eclipse, selecione o menu help -> softwares updates -> find and install 2) Selecione Search for new features to install e clique em next 3) Na próxima tela clique no botão New Remote Site e preencha de acordo com a figura abaixo (Name: Pydev, URL: http://pydev.sourceforge.net/updates/) 4) Feito isso selecione apenas o Pydev e clique em finish 5) Selecione apenas o Pydev e clique em Next 6) Aceite a licença e clique em Next 7) Clique em finish para confirmar a instalação do plugin 8) O Eclipse vai fazer o download dos arquivos necessários para instalação do Pydev 9) Ao final do download a seguinte tela vai ser exibida, confirme com Install All 10) Depois de instalado ele vai pedir para reiniciar o Eclipse, confirme a operação 11) Selecione o menu Window -> Preference 12) Selecione Interpreter - Python e clique no botão New da configuração de Python interpreters 13) Selecione a localização do interpretador Python que está instalado em sua máquina, como eu estou utilizando o Windows eu apontarei para c:\python26. No Windows basta encontrar o executável python.exe (geralmente ele fica em C:\Python26). Depois de selecionar o interpretador a seguinte tela será exibida, confirme a seleção sem alterações 14) Mais um vez confirme clicando no botão Ok 15) O Pydev já está pronto para ser utilizado, crie um novo projeto selecionando o menu New -> Pydev Project 16) Preencha as opções conforme a figura abaixo e clique em finish 17) Já com seu projeto aberto, selecione a pasta src e crie um novo arquivo 18) Escolhe teste.py para o nome do seu novo arquivo e clique em finish 19) Agora você pode programar em Python utilizando o Eclipse, veja um exemplo do recurso de autocompletar utilizando um "import do datetime" é ele irá responder ao rodar que tem 0 erros, isso informa que está tudo funcionando corretamente. 





Referências

CHALMERS, Douglas; MCAUSLAND, W. D. M.. The Handbook for Economics
Lecturers: Computer-assisted assessment. Glasgow Caledonian University. Disponível
em: <http://www.economicsnetwork.ac.uk/handbook/printable/caa_v5.pdf>. Acesso
em: 20 ago. 2009.

MOREIRA, Marco Antônio. Pesquisa em ensino: aspectos metodológicos e
referenciais teóricos a luz do vê epistemologico de Gowin. São Paulo: EPU, c1990. 94p
(Temas básicos de educação e ensino) ISBN 85-12-30630-0, (broch.)

Ribeiro, C. (2003). Metacognição: Um apoio ao processo de aprendizagem.Psicologia: Reflexão e Critica, 16(1), 109-116. 

RAABE, André Luís Alice. Uma Proposta de Arquitetura de Sistema Tutor
Inteligente Baseado na Teoria das Experiências de Aprendizagem Mediadas. 2005.
152 f. Tese (Doutorado) - Curso de Pós-graduação em Informática Na Educação,
Universidade Federal do Rio Grande do Sul, Porto Alegre, 2005.

FEUERSTEIN, Reuven. The dynamic assessment of cognitive modifiability: the
learning propensity assessment device, theory, instruments and techniques. Jerusalem:
ICELP, 2002. 630 p il ISBN 9659049005 (enc.)
 

TOBIAS, Sigmund; EVERSON, Howard T.. Knowing What You Know and What
You Don’t:: Further Research on Metacognitive Knowledge Monitoring. College
Board Research Report No. 2002-3. Disponível em:
<http://professionals.collegeboard.com/profdownload/pdf/071623RDCBRpt02-3.pdf>. Acesso em:
23 ago. 2009.

Referências Disponível em: <http://www.python.org.br>. Acesso em: 28,jul,2009. 

Disponível em: <http://www.pythonbrasil.com.br/moin.cgi/PerguntasFrequentes/SobrePython>. Acesso em: 28,jul,2009. 

Disponível em: <http://opencg.cerberus1746.site90.com/?p=21>. Acesso em: 17,jul,2009. 

Projeto Eclipse Foundation. Ottawa, Ontario, Canada. 2004. Disponível em: <http://www.eclipse.org>. Acesso em: 7, jul, 2009. 

Pydev Open Source Project. Pydev Sponsors. Aptana. 2002. Disponível em: <http://pydev.sourceforge.net>. Acesso em: 9, jul, 2009. 

Django Project open-source. BSD license. 2009. Disponível em: <http://www.djangoproject.com>. Acesso em 12, jul, 2009. 

Framework Django Brasil Projeto Aberto. Grupo de discursão. Disponível em: <http://www.djangobrasil.org>. Acesso em 15, jul, 2009. 

The Django Book. Copyright 2006, 2007, 2008, 2009 Adrian Holovaty and Jacob Kaplan-Moss. Disponível em: <http://www.djangobook.com>. Acesso em 17, jul, 2009. 

Django+PyDev? on Feisty. 2007. Disponível em: <http://solyaris.wordpress.com/2007/05/16/how-to-djangopydev-on-feisty>. Acesso em 17, jul, 2009. 

Como usar o Eclipse para desenvolver em Python, especialmente Zope/Plone. Rafael Oliveira. Mestrado em Ciências da Informação. UFMG. 2009. Disponível em: <http://rafaelb.objectis.net>. Acesso em 18, jul, 2009. 

O framework Django. Eduardo Steiner. PET Computação. UFSC. 2008. Disponível em: < http://pet.inf.ufsc.br/files/django.pdf >. Acesso em 18, jul, 2009. 

Django, Aptana, Gimp, Inkscape. Rafael Campos de Bastiani. Caxias do Sul. RS. RFDev.org. 2008. Disponível em: <http://rfdev.org>. Acesso em 20, jul, 2009. 

Livro: Agile Software Development with Scrum (Series in Agile Software Development) (Paperback) by Ken Schwaber Ken Schwaber (Author) 

Scrum. Vinícius Manhães Teles. Improve It. 2009. Disponível em: <http://improveit.com.br/scrum>. Acesso em 6, jul, 2009. 

Gerenciamento de Projetos Web. Fabio Marques. iMasters. 2007. Disponível em: <http://imasters.uol.com.br/artigo/7240/gerencia/gerenciamento_de_projetos_web_-_vamos_de_scrum >. Acesso em 6, jul, 2009. 

Scrum. WikPédia. 2009. Disponível em: <http://pt.wikipedia.org/wiki/Scrum >. Acesso em 6, jul, 2009. 

Artigo Gerenciamento de Projetos Web 02. Marcia Araujo Coelho. iMasters. 2007. Disponível em: <http://www.abramti.org.br/modules/news/makepdf.php?storyid=114 >. Acesso em 8, jul, 2009. 

Livro: Agile Software Development with Scrum (Series in Agile Software Development) (Paperback) by Ken Schwaber Ken Schwaber (Author) 

Scrum. Vinícius Manhães Teles. Improve It. 2009. Disponível em: <http://improveit.com.br/scrum>. Acesso em 6, jul, 2009. 

Gerenciamento de Projetos Web. Fabio Marques. iMasters. 2007. Disponível em: <http://imasters.uol.com.br/artigo/7240/gerencia/gerenciamento_de_projetos_web_-_vamos_de_scrum >. Acesso em 6, jul, 2009. 

Scrum. WikPédia. 2009. Disponível em: <http://pt.wikipedia.org/wiki/Scrum >. Acesso em 6, jul, 2009. 

Artigo Gerenciamento de Projetos Web 02. Marcia Araujo Coelho. iMasters. 2007. Disponível em: <http://www.abramti.org.br/modules/news/makepdf.php?storyid=114 >. Acesso em 8, jul, 2009. 

Artigo Trabalho Python no Eclipse com o Pydev. Allisson Azevedo. gerenciamento de redes e desenvolvimento web. 2009. Acesso em 20, ago, 2009.